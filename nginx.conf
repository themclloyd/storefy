# Storefy Nginx Configuration
# Secure production configuration with file access protection

server {
    listen 80;
    server_name your-domain.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name your-domain.com;
    
    # SSL configuration
    ssl_certificate /path/to/certificate.crt;
    ssl_certificate_key /path/to/private.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' blob: https://plausible.io https://vercel.live https://va.vercel-scripts.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; img-src 'self' data: blob: https:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://*.supabase.co wss://*.supabase.co https://vitals.vercel-analytics.com https://va.vercel-scripts.com https://plausible.io; frame-ancestors 'none'; object-src 'none'; base-uri 'self'; form-action 'self'" always;
    
    # Document root
    root /var/www/storefy/dist;
    index index.html;
    
    # Block access to source files and sensitive directories
    location ~ ^/(src|components|middleware|lib|utils|services|hooks|stores|api|scripts|node_modules|\.git|supabase|docs)/ {
        deny all;
        return 403;
    }
    
    # Block access to specific file types
    location ~ \.(ts|tsx|js|jsx|env|json|config|md|txt|log|key|pem|cert|sql|db|sqlite|backup|bak|tmp)$ {
        deny all;
        return 403;
    }
    
    # Block access to specific files
    location ~ ^/(package\.json|package-lock\.json|tsconfig\.json|vite\.config\.ts|tailwind\.config\.ts|eslint\.config\.js|\.gitignore|vercel\.json|components\.json)$ {
        deny all;
        return 403;
    }
    
    # Block path traversal attempts
    location ~ \.\./  {
        deny all;
        return 403;
    }
    
    # Block access to hidden files
    location ~ /\. {
        deny all;
        return 403;
    }
    
    # Serve static assets with caching
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff always;
        
        # Security headers for static assets
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    }
    
    # SPA routing - serve index.html for all non-file requests
    location / {
        try_files $uri $uri/ /index.html;
        
        # Add security headers to HTML responses
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    }
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    
    # Apply rate limiting to API endpoints
    location /api/ {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Apply stricter rate limiting to auth endpoints
    location /auth/ {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Disable server tokens
    server_tokens off;
    
    # Log security events
    access_log /var/log/nginx/storefy_access.log;
    error_log /var/log/nginx/storefy_error.log;
}
